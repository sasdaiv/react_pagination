{"version":3,"sources":["utils.ts","components/Pagination/Pagination.tsx","App.tsx","index.tsx"],"names":["getNumbers","from","to","numbers","n","push","Pagination","total","perPage","currentPage","onPageChange","totalPages","Math","ceil","visiblePages","handlePageChange","page","className","cn","disabled","href","onClick","map","active","items","App","useState","setCurrentPage","setPerPage","start","end","length","itemsToShow","slice","id","value","onChange","e","target","quantity","htmlFor","pageNumber","item","ReactDOM","render","document","getElementById"],"mappings":"yLAAO,SAASA,EAAWC,EAAcC,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQE,KAAKD,GAGf,OAAOD,E,2BCKIG,EAA8B,SAAC,GAKrC,IAJLC,EAII,EAJJA,MACAC,EAGI,EAHJA,QACAC,EAEI,EAFJA,YACAC,EACI,EADJA,aAEMC,EAAaC,KAAKC,KAAKN,EAAQC,GAC/BM,EAAed,EAAW,EAAGW,GAE7BI,EAAmB,SAACC,GACpBP,IAAgBO,GAAQA,GAAQ,GAAKA,GAAQL,GAC/CD,EAAaM,IAIjB,OACE,qBAAIC,UAAU,aAAd,UACE,oBAAIA,UAAWC,IAAG,YAAa,CAC7BC,SAAUV,GAAe,IAD3B,SAIE,mBACE,UAAQ,WACRQ,UAAU,YACVG,KAAK,QACL,gBAA+B,IAAhBX,EACfY,QAAS,kBAAMN,EAAiBN,EAAc,IALhD,oBAUDK,EAAaQ,KAAI,SAAAN,GAAI,OACpB,oBAAIC,UAAWC,IAAG,YAAa,CAC7BK,OAAQd,IAAgBO,IAD1B,SAIE,mBACE,UAAQ,WACRC,UAAU,YACVG,KAAI,WAAMJ,GACVK,QAAS,kBAAMN,EAAiBC,IAJlC,SAMGA,SAKP,oBAAIC,UAAWC,IAAG,YAAa,CAC7BC,SAAUV,IAAgBE,IAD5B,SAIE,mBACE,UAAQ,WACRM,UAAU,YACVG,KAAK,QACL,gBAAeX,IAAgBE,EAC/BU,QAAS,kBAAMN,EAAiBN,EAAc,IALhD,wBCzDFe,EAAQxB,EAAW,EAAG,IACzBsB,KAAI,SAAAlB,GAAC,qBAAYA,MAEPqB,EAAgB,WAC3B,MAAsCC,mBAAS,GAA/C,mBAAOjB,EAAP,KAAoBkB,EAApB,KACA,EAA8BD,mBAAS,GAAvC,mBAAOlB,EAAP,KAAgBoB,EAAhB,KAaMC,EAAQrB,EAAUC,EAAcD,EAChCsB,EAAMtB,EAAUC,GAAee,EAAMO,OACvCvB,EAAUC,EACVe,EAAMO,OAEJC,EAAcR,EAAMS,MAAMJ,EAAOC,GAEvC,OACE,sBAAKb,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,wBACWR,EADX,mBACiCoB,EAAQ,EADzC,cACgDC,EADhD,eAC0DN,EAAMO,OADhE,OAIA,sBAAKd,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,wBACE,UAAQ,kBACRiB,GAAG,kBACHjB,UAAU,eACVkB,MAAO3B,EACP4B,SAjCY,SAACC,GACrBT,GAAYS,EAAEC,OAAOH,OACrBR,EAAe,IA0BT,SAnBa,CAAC,EAAG,EAAG,GAAI,IA0BRL,KAAI,SAAAiB,GAAQ,OACxB,wBAAQJ,MAAOI,EAAf,SAA0BA,WAKhC,uBAAOC,QAAQ,kBAAkBvB,UAAU,qBAA3C,+BAKF,cAAC,EAAD,CACEV,MAAOiB,EAAMO,OACbvB,QAASA,EACTC,YAAaA,EACbC,aA7Ce,SAAC+B,GACpBd,EAAec,MA8Cb,6BAEIT,EAAYV,KAAI,SAAAoB,GAAI,OAClB,oBAAI,UAAQ,OAAZ,SAA+BA,GAAR,iBCjEnCC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.280563b0.chunk.js","sourcesContent":["export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import React from 'react';\n\nimport cn from 'classnames';\nimport { getNumbers } from '../../utils';\n\ntype Props = {\n  total: number,\n  perPage: number\n  currentPage: number\n  onPageChange: (page: number) => void\n};\n\nexport const Pagination: React.FC<Props> = ({\n  total,\n  perPage,\n  currentPage,\n  onPageChange,\n}) => {\n  const totalPages = Math.ceil(total / perPage);\n  const visiblePages = getNumbers(1, totalPages);\n\n  const handlePageChange = (page: number) => {\n    if (currentPage !== page && page >= 1 && page <= totalPages) {\n      onPageChange(page);\n    }\n  };\n\n  return (\n    <ul className=\"pagination\">\n      <li className={cn('page-item', {\n        disabled: currentPage <= 1,\n      })}\n      >\n        <a\n          data-cy=\"prevLink\"\n          className=\"page-link\"\n          href=\"#prev\"\n          aria-disabled={currentPage === 1}\n          onClick={() => handlePageChange(currentPage - 1)}\n        >\n          «\n        </a>\n      </li>\n      {visiblePages.map(page => (\n        <li className={cn('page-item', {\n          active: currentPage === page,\n        })}\n        >\n          <a\n            data-cy=\"pageLink\"\n            className=\"page-link\"\n            href={`#${page}`}\n            onClick={() => handlePageChange(page)}\n          >\n            {page}\n          </a>\n        </li>\n      ))}\n\n      <li className={cn('page-item', {\n        disabled: currentPage === totalPages,\n      })}\n      >\n        <a\n          data-cy=\"nextLink\"\n          className=\"page-link\"\n          href=\"#next\"\n          aria-disabled={currentPage === totalPages}\n          onClick={() => handlePageChange(currentPage + 1)}\n        >\n          »\n        </a>\n      </li>\n    </ul>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.css';\nimport { getNumbers } from './utils';\nimport { Pagination } from './components/Pagination';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst items = getNumbers(1, 42)\n  .map(n => `Item ${n}`);\n\nexport const App: React.FC = () => {\n  const [currentPage, setCurrentPage] = useState(1);\n  const [perPage, setPerPage] = useState(5);\n\n  const handlePerPage = (e: React.ChangeEvent<HTMLSelectElement>) => {\n    setPerPage(+e.target.value);\n    setCurrentPage(1);\n  };\n\n  const onPageChange = (pageNumber: number) => {\n    setCurrentPage(pageNumber);\n  };\n\n  const itemsPerPage = [3, 5, 10, 20];\n\n  const start = perPage * currentPage - perPage;\n  const end = perPage * currentPage <= items.length\n    ? perPage * currentPage\n    : items.length;\n\n  const itemsToShow = items.slice(start, end);\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${currentPage} (items ${start + 1} - ${end} of ${items.length})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            value={perPage}\n            onChange={handlePerPage}\n          >\n            {itemsPerPage.map(quantity => (\n              <option value={quantity}>{quantity}</option>\n            ))}\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        total={items.length}\n        perPage={perPage}\n        currentPage={currentPage}\n        onPageChange={onPageChange}\n      />\n      <ul>\n        {\n          itemsToShow.map(item => (\n            <li data-cy=\"item\" key=\"item\">{item}</li>\n          ))\n        }\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}