{"version":3,"sources":["utils.ts","components/Pagination/Pagination.tsx","App.tsx","index.tsx"],"names":["getNumbers","from","to","numbers","n","push","Pagination","total","perPage","currentPage","onPageChange","totalPages","Math","ceil","visiblePages","handlePageChange","page","className","cn","disabled","href","onClick","prevPage","map","active","nextPage","items","itemsPerPage","App","useState","setCurrentPage","setPerPage","start","end","length","itemsToShow","slice","id","value","onChange","e","target","quantity","htmlFor","pageNumber","item","ReactDOM","render","document","getElementById"],"mappings":"yLAAO,SAASA,EAAWC,EAAcC,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQE,KAAKD,GAGf,OAAOD,E,2BCKIG,EAA8B,SAAC,GAKrC,IAJLC,EAII,EAJJA,MACAC,EAGI,EAHJA,QACAC,EAEI,EAFJA,YACAC,EACI,EADJA,aAEMC,EAAaC,KAAKC,KAAKN,EAAQC,GAC/BM,EAAed,EAAW,EAAGW,GAE7BI,EAAmB,SAACC,GACpBP,IAAgBO,GAAQA,GAAQ,GAAKA,GAAQL,GAC/CD,EAAaM,IAoBjB,OACE,qBAAIC,UAAU,aAAd,UACE,oBAAIA,UAAWC,IAAG,YAAa,CAC7BC,SAAUV,GAAe,IAD3B,SAIE,mBACE,UAAQ,WACRQ,UAAU,YACVG,KAAK,QACL,gBAA+B,IAAhBX,EACfY,QA3Be,WACrB,IAAMC,EAAWb,EAAc,EAE3Ba,GAAY,GACdP,EAAiBO,IAkBf,oBAUDR,EAAaS,KAAI,SAAAP,GAAI,OACpB,oBACEC,UAAWC,IAAG,YAAa,CACzBM,OAAQf,IAAgBO,IAF5B,SAME,mBACE,UAAQ,WACRC,UAAU,YACVG,KAAI,WAAMJ,GACVK,QAAS,kBAAMN,EAAiBC,IAJlC,SAMGA,KAREA,MAaT,oBAAIC,UAAWC,IAAG,YAAa,CAC7BC,SAAUV,IAAgBE,IAD5B,SAIE,mBACE,UAAQ,WACRM,UAAU,YACVG,KAAK,QACL,gBAAeX,IAAgBE,EAC/BU,QAnDe,WACrB,IAAMI,EAAWhB,EAAc,EAE3BgB,GAAYd,GACdI,EAAiBU,IA0Cf,wBC3EFC,EAAQ1B,EAAW,EAAG,IACzBuB,KAAI,SAAAnB,GAAC,qBAAYA,MAEduB,EAAe,CAAC,EAAG,EAAG,GAAI,IAEnBC,EAAgB,WAC3B,MAAsCC,mBAAS,GAA/C,mBAAOpB,EAAP,KAAoBqB,EAApB,KACA,EAA8BD,mBAAS,GAAvC,mBAAOrB,EAAP,KAAgBuB,EAAhB,KAWMC,EAAQxB,EAAUC,EAAcD,EAChCyB,EAAMzB,EAAUC,GAAeiB,EAAMQ,OACvC1B,EAAUC,EACViB,EAAMQ,OAEJC,EAAcT,EAAMU,MAAMJ,EAAOC,GAEvC,OACE,sBAAKhB,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,wBACWR,EADX,mBACiCuB,EAAQ,EADzC,cACgDC,EADhD,eAC0DP,EAAMQ,OADhE,OAIA,sBAAKjB,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,wBACE,UAAQ,kBACRoB,GAAG,kBACHpB,UAAU,eACVqB,MAAO9B,EACP+B,SA/BY,SAACC,GACrBT,GAAYS,EAAEC,OAAOH,OACrBR,EAAe,IAwBT,SAOGH,EAAaJ,KAAI,SAAAmB,GAAQ,OACxB,wBACEJ,MAAOI,EADT,SAIGA,GAFIA,UAQb,uBAAOC,QAAQ,kBAAkB1B,UAAU,qBAA3C,+BAKF,cAAC,EAAD,CACEV,MAAOmB,EAAMQ,OACb1B,QAASA,EACTC,YAAaA,EACbC,aAhDe,SAACkC,GACpBd,EAAec,MAiDb,6BAEIT,EAAYZ,KAAI,SAAAsB,GAAI,OAClB,oBAAI,UAAQ,OAAZ,SAA+BA,GAAPA,YCtEpCC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.8b60d068.chunk.js","sourcesContent":["export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import React from 'react';\n\nimport cn from 'classnames';\nimport { getNumbers } from '../../utils';\n\ntype Props = {\n  total: number,\n  perPage: number\n  currentPage: number\n  onPageChange: (page: number) => void\n};\n\nexport const Pagination: React.FC<Props> = ({\n  total,\n  perPage,\n  currentPage,\n  onPageChange,\n}) => {\n  const totalPages = Math.ceil(total / perPage);\n  const visiblePages = getNumbers(1, totalPages);\n\n  const handlePageChange = (page: number) => {\n    if (currentPage !== page && page >= 1 && page <= totalPages) {\n      onPageChange(page);\n    }\n  };\n\n  const handlePrevPage = () => {\n    const prevPage = currentPage - 1;\n\n    if (prevPage >= 1) {\n      handlePageChange(prevPage);\n    }\n  };\n\n  const handleNextPage = () => {\n    const nextPage = currentPage + 1;\n\n    if (nextPage <= totalPages) {\n      handlePageChange(nextPage);\n    }\n  };\n\n  return (\n    <ul className=\"pagination\">\n      <li className={cn('page-item', {\n        disabled: currentPage <= 1,\n      })}\n      >\n        <a\n          data-cy=\"prevLink\"\n          className=\"page-link\"\n          href=\"#prev\"\n          aria-disabled={currentPage === 1}\n          onClick={handlePrevPage}\n        >\n          «\n        </a>\n      </li>\n      {visiblePages.map(page => (\n        <li\n          className={cn('page-item', {\n            active: currentPage === page,\n          })}\n          key={page}\n        >\n          <a\n            data-cy=\"pageLink\"\n            className=\"page-link\"\n            href={`#${page}`}\n            onClick={() => handlePageChange(page)}\n          >\n            {page}\n          </a>\n        </li>\n      ))}\n\n      <li className={cn('page-item', {\n        disabled: currentPage === totalPages,\n      })}\n      >\n        <a\n          data-cy=\"nextLink\"\n          className=\"page-link\"\n          href=\"#next\"\n          aria-disabled={currentPage === totalPages}\n          onClick={handleNextPage}\n        >\n          »\n        </a>\n      </li>\n    </ul>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.css';\nimport { getNumbers } from './utils';\nimport { Pagination } from './components/Pagination';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst items = getNumbers(1, 42)\n  .map(n => `Item ${n}`);\n\nconst itemsPerPage = [3, 5, 10, 20];\n\nexport const App: React.FC = () => {\n  const [currentPage, setCurrentPage] = useState(1);\n  const [perPage, setPerPage] = useState(5);\n\n  const handlePerPage = (e: React.ChangeEvent<HTMLSelectElement>) => {\n    setPerPage(+e.target.value);\n    setCurrentPage(1);\n  };\n\n  const onPageChange = (pageNumber: number) => {\n    setCurrentPage(pageNumber);\n  };\n\n  const start = perPage * currentPage - perPage;\n  const end = perPage * currentPage <= items.length\n    ? perPage * currentPage\n    : items.length;\n\n  const itemsToShow = items.slice(start, end);\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${currentPage} (items ${start + 1} - ${end} of ${items.length})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            value={perPage}\n            onChange={handlePerPage}\n          >\n            {itemsPerPage.map(quantity => (\n              <option\n                value={quantity}\n                key={quantity}\n              >\n                {quantity}\n              </option>\n            ))}\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        total={items.length}\n        perPage={perPage}\n        currentPage={currentPage}\n        onPageChange={onPageChange}\n      />\n      <ul>\n        {\n          itemsToShow.map(item => (\n            <li data-cy=\"item\" key={item}>{item}</li>\n          ))\n        }\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}